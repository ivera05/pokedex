services:
  pokedex-db:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=pokedex'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
    ports:
      - 5432:5432
    networks:
      - pokedex-network
    volumes:
      - pokedex-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U myuser" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  pokedex-spring:
    build:
      context: ./spring/
    ports:
      - 8080:8080
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://pokedex-db:5432/pokedex
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      pokedex-db:
        condition: service_healthy
    networks:
      - pokedex-network

  pokedex-nextjs:
    build:
      context: ./nextjs-dashboard/
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=development
    volumes:
      - ./nextjs-dashboard:/app
      - /nextjs-dashboard/node_modules
    stdin_open: true
    tty: true
    networks:
      - pokedex-network
    depends_on:
      - pokedex-spring

networks:
  pokedex-network:
    driver: bridge

volumes:
  pokedex-db-data: